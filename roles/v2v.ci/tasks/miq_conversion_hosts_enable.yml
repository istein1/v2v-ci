---
- block:

    - name: Find Conversion VM JSON
      uri:
        url: "https://{{ inventory_hostname }}/api/vms?expand=resources&attributes=name&filter[]=name={{ hostvars[item].rhv_vm_name }}&filter[]=vendor=redhat&filter[]=ems_id!=null"
        user: "{{ miq_app_username }}"
        password: "{{ miq_app_password }}"
        method: GET
        validate_certs: no
      register: conversion_vm_details
      until: conversion_vm_details.json.subcount == 1
      retries: 30
      delay: 60

    - set_fact:
        query: "resources[?name=='{{ hostvars[item].rhv_vm_name }}'].id"

    - name: Extracting Conversion VM ID from JSON
      set_fact:
        conv_vm_id: "{{ conversion_vm_details.json | json_query(query) | first }}"

    - debug:
        var: conv_vm_id

    - name: Look for conversion host VM {{ hostvars[item].rhv_vm_name }}
      uri:
        url: "https://{{ inventory_hostname }}/api/conversion_hosts/?filter[]=name={{ hostvars[item].rhv_vm_name }}&expand=resources"
        user: "{{ miq_app_username }}"
        password: "{{ miq_app_password }}"
        method: GET
        validate_certs: no
      register: conversion_host_json

    - block:
        - set_fact:
            query: "resources[?name=='{{ hostvars[item].rhv_vm_name }}'].id"

        - name: Extract conversion host ID from JSON
          set_fact:
             conversion_host_id: "{{ conversion_host_json.json | json_query(query) | first }}"

        - name: Remove conversion host VM {{ hostvars[item].rhv_vm_name }}
          uri:
            url: "https://{{ inventory_hostname }}/api/conversion_hosts/{{conversion_host_id}}"
            user: "{{ miq_app_username }}"
            password: "{{ miq_app_password }}"
            method: DELETE
            status_code: 204
            validate_certs: no

        - name: Wait until conversion host VM {{ hostvars[item].rhv_vm_name }} is removed
          uri:
            url: "https://{{ inventory_hostname }}/api/conversion_hosts/?filter[]=name={{ hostvars[item].rhv_vm_name }}&expand=resources"
            user: "{{ miq_app_username }}"
            password: "{{ miq_app_password }}"
            method: GET
            validate_certs: no
            return_content: yes
          register: conversion_host_post_remove_json
          until: conversion_host_post_remove_json.json.subcount == 0
          retries: 60
          delay: 30
      when: conversion_host_json.json.subcount != 0

    - name: Add RHV Engine host to inventory
      add_host:
        name: "{{ v2v_ci_rhv_hostname }}"
        ansible_user: "root"
        ansible_ssh_pass: "{{ v2v_ci_rhv_root_password }}"
        ansible_pipelining: true

    # Note: Temporarily, these keys are taken from RHV Engine
    #       Once we will automate the UCI VMs creation - they will be taken from localhost
    - name: Read RHV Engine SSH RSA Private key file /root/.ssh/id_rsa
      delegate_to: "{{ v2v_ci_rhv_hostname }}"
      shell: tail -n +4 /root/.ssh/id_rsa
      register: ssh_key

    - name: Read RHV Engine CA certificates bundle file /etc/pki/ovirt-engine/apache-ca.pem
      delegate_to: "{{ v2v_ci_rhv_hostname }}"
      shell: tail -n +4 /etc/pki/ovirt-engine/apache-ca.pem
      register: ca_certs_file

    - name: Enable conversion host {{ hostvars[item].rhv_vm_name }}
      uri:
        url: "https://{{ inventory_hostname }}/api/conversion_hosts"
        user: "{{ miq_app_username }}"
        password: "{{ miq_app_password }}"
        method: POST
        validate_certs: no
        body_format: json
        body:
          action: create
          resources:
            - name: "{{ hostvars[item].rhv_vm_name }}"
              resource_type: "ManageIQ::Providers::Redhat::InfraManager::Vm"
              resource_id: "{{ conv_vm_id }}"
              max_concurrent_tasks: "{{ v2v_max_concurrent_conversions }}"
              auth_user: "cloud-user"
              vmware_vddk_package_url: "{{ vmware_vddk_package_url }}"
              conversion_host_ssh_private_key: "{{ ssh_key.stdout }}"
              vmware_ssh_private_key: "{{ vmware_ssh_private_key }}"
              tls_ca_certs: "{{ ca_certs_file.stdout }}"
              address: "{{ hostvars[item].ip_address }}"
      register: enable_conversion_host_json

    - name: Check enable conversion host task url is valid
      uri:
        url: "https://{{ inventory_hostname }}/api/tasks/?filter[]=id={{enable_conversion_host_json.json.results[0].task_id}}"
        user: "{{ miq_app_username }}"
        password: "{{ miq_app_password }}"
        method: GET
        validate_certs: no
        return_content: yes
      register: task_json
      until: task_json.json.subcount == 1
      retries: 20
      delay: 5


    - name: Check enable conversion host task has ended
      uri:
        url: "{{enable_conversion_host_json.json.results[0].task_href}}"
        user: "{{ miq_app_username }}"
        password: "{{ miq_app_password }}"
        method: GET
        validate_certs: no
      register: task_json
      until: task_json.json.state == "Finished"
      retries: 20
      delay: 30

  tags:
    - miq_conversion_hosts_enable
