---
- block:
  - block:
    - name: Add VMware host {{ item }}
      add_host:
        name: "{{ item }}"
        ansible_user: root
        ansible_ssh_pass: "{{ hostvars[item].root_password }}"
        ansible_pipelining: true

    - name: Add public key to VMware host {{ item }} authorized_keys file
      authorized_key:
        key: "{{ vmware_ssh_public_key }}"
        user:  "{{ ansible_ssh_user }}"
        state: present
        exclusive: no
        path: /etc/ssh/keys-root/authorized_keys
      delegate_to: "{{ item }}"

    - name: Get VMware host {{ item }} json
      uri:
        url: "https://{{ inventory_hostname }}/api/hosts/?filter[]=name={{ item }}&expand=resources"
        user: "{{ miq_app_username | default('admin') }}"
        password: "{{ miq_app_password | default('smartvm') }}"
        method: GET
        validate_certs: no
      register: vmw_host_json
      delegate_to: localhost

    - name: Print VMware hosts json
      debug:
        var: vmw_host_json

    - set_fact:
        query: "resources[?name=='{{ item }}'].ipaddress"

    - name: Extracting VMware host {{ item }} ip address from JSON
      set_fact:
        vmw_host_ipaddress: "{{ vmw_host_json.json | json_query(query) | first }}"

    - name: Print VMware host {{ item }} ip address
      debug:
        var: vmw_host_ipaddress

    - name: Add Conversion hosts
      add_host:
        name: "{{ inner_item }}"
        ansible_user: root
        ansible_ssh_pass: "{{ hostvars[inner_item].root_password }}"
        ansible_pipelining: true
      loop: "{{ groups['ovirt_conversion_hosts']  }}"
      loop_control:
        loop_var: inner_item

    - name: Ensure VMware host {{ item }} key is a present in RHV conversion hosts
      lineinfile:
        dest: /var/lib/vdsm/.ssh/known_hosts
        create: yes
        state: present
        line: "{{ lookup('pipe', 'ssh-keyscan {{ vmw_host_ipaddress }}') }}"
        regexp: "^{{ vmw_host_ipaddress }}"
      loop: "{{ groups['ovirt_conversion_hosts']  }}"
      loop_control:
        loop_var: inner_item
      delegate_to: "{{ inner_item }}"

    # Run this block only in case of ssh transport method is used:
    when: vmware_ssh_private_key is not none
  tags:
    - ssh_configuration
