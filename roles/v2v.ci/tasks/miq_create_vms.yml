---

- include: '{{role_path}}/tasks/netapp.yml'
- include: '{{role_path}}/tasks/rhv_storage_discovery.yml'
- include: '{{role_path}}/tasks/rhv_add_storage.yml'

# Remove & Create VMs
- name: Remove VMware source instances if present
  vmware_guest:
    hostname: "{{ v2v_ci_vmw_hostname }}"
    username: "{{ v2v_ci_vmw_user }}"
    password: "{{ v2v_ci_vmw_password }}"
    validate_certs: no
    state: absent
    name: "{{ item }}"
    cluster: "{{ v2v_ci_source_cluster }}"
  with_items: "{{ v2v_ci_migration_plan_vms }}"

- set_fact:
    vms_per_host: "{{ '1' if v2v_ci_migration_plan_vms|length == 1 else v2v_ci_migration_plan_vms|length / groups['vmware_esx_hosts']|length }}"

- debug: msg="{{vms_per_host}}"

- name:  Clone a virtual machine from Linux template
  vmware_guest:
    hostname: "{{ v2v_ci_vmw_hostname }}"
    username: "{{ v2v_ci_vmw_user }}"
    password: "{{ v2v_ci_vmw_password }}"
    validate_certs: no
    datacenter: "{{ v2v_ci_vmw_datacenter }}"
    state: poweredoff
    folder: "{{ v2v_ci_vmw_folder }}"
    template: "{{ v2v_ci_vmw_template }}" 
    name: "{{ item }}"
    datastore: "{{ v2v_ci_source_datastore }}"
    esxi_hostname: "{{ groups['vmware_esx_hosts'][my_idx|int // vms_per_host|int] }}"
  loop: "{{ v2v_ci_migration_plan_vms }}"
  loop_control:
    index_var: my_idx
  async: 7200
  poll: 0
  register: new_vms

- debug:
    var: new_vms

- name: wait for vms
  async_status: jid={{ item.ansible_job_id }}
  register: jobs
  until: jobs.finished
  retries: 300
  with_items: "{{ new_vms.results }}"

